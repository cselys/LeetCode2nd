public class Solution {
        private char[][] map=new char[][]{{},{},
        { 'a', 'b', 'c' }, { 'd', 'e', 'f' },
            { 'g', 'h', 'i' }, { 'j', 'k', 'l' }, { 'm', 'n', 'o' },
			{ 'p', 'q', 'r', 's' }, { 't', 'u', 'v'}, { 'w', 'x', 'y', 'z' }
    
    };
    public ArrayList<String> letterCombinations(String digits) {
        // Start typing your Java solution below
        // DO NOT write main() function
     ArrayList<String> ret=new ArrayList<String>();
     StringBuilder tmp=new StringBuilder();
     comb(digits,0,ret,tmp);
     
    return ret;
        
    }
    
    void comb(String digits, int index, ArrayList<String> ret, StringBuilder tmp){
        if(index>=digits.length()) ret.add(tmp.toString());
        else{
            int iLen=map[digits.charAt(index)-'0'].length;
            for(int i=0;i<iLen;i++){
                tmp.append(map[digits.charAt(index)-'0'][i]);
                comb(digits,index+1,ret,tmp);
                tmp.deleteCharAt(tmp.length()-1);
            }
            
        }
        
        
    }
}